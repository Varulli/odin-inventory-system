extends layout 

block content
  h1= title

  form#form(method='POST')
    div.form-group
      label(for='name') Name:
      input#name(type='text' name='name' required value=(game ? game.name : ''))
      input#prev_name(type='hidden' name='prev_name' value=prev_name)
      if errors && errors.has('name')
        p.form-error * #{errors.get('name')}

    div.form-group
      label(for='time_of_creation') Time of Creation:
      input#time_of_creation(type='number' name='time_of_creation' value=(game ? game.time_of_creation : max_time_of_creation) placeholder='YYYY' min=min_time_of_creation max=max_time_of_creation step='1')
      if errors && errors.has('time_of_creation')
        p.form-error * #{errors.get('time_of_creation')}

    div.form-group
      label(for='description') Description:
      textarea#description(name='description' rows='5')= game ? game.description : ''
      if errors && errors.has('description')
        p.form-error * #{errors.get('description')}

    div.form-group
      label Genre: 
      if !genres
        p No genres available
      else
        div.form-checkboxes 
          each genre in genres
            div.form-check
              input(type='checkbox' name='genre' id=genre._id value=genre._id checked=(game && game.genre && game.genre.includes(genre._id)))
              label(for=genre._id)= genre.name

    div.form-group
      label Platforms:
      if !platforms
        p No platforms available
      else
        div.form-checkboxes
          each platform in platforms
            div.form-check
              input(type='checkbox' name='platform' id=platform._id value=platform._id checked=(game && game.platform && game.platform.includes(platform._id)))
              label(for=platform._id)= platform.name

    div.form-group
      label(for='developer') Developer:
      select#developer(name='developer')
        option(value='') -- Select Developer --
        if developers
          each developer in developers
            option(value=developer._id selected=(game && game.developer && game.developer.toString() === developer._id.toString()))= developer.name
      if errors && errors.has('developer')
        p.form-error * #{errors.get('developer')}

    div.form-group
      label(for='publisher') Publisher:
      select#publisher(name='publisher')
        option(value='') -- Select Publisher --
        if publishers
          each publisher in publishers
            option(value=publisher._id selected=(game && game.publisher && game.publisher.toString() === publisher._id.toString()))= publisher.name
      if errors && errors.has('publisher')
        p.form-error * #{errors.get('publisher')}

block actions  
  button.update(type='submit' form='form') Submit